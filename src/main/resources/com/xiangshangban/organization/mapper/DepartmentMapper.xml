<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiangshangban.organization.dao.DepartmentDao">
 
  <resultMap  type="com.xiangshangban.organization.bean.Department" id="Department" > 
    <result  property="departmentId" jdbcType="VARCHAR" column="department_id" />
    <result  property="departmentNumbe" jdbcType="VARCHAR" column="department_numbe" />   
    <result  property="departmentName" jdbcType="VARCHAR"  column="department_name"/>
    <result column="department_describe" jdbcType="VARCHAR" property="departmentDescribe" />
    <result  property="employeeId" jdbcType="VARCHAR" column="employee_id"/>    
    <result  property="departmentPhone" jdbcType="VARCHAR" column="department_phone"/>
    <result  property="departmentFax" jdbcType="VARCHAR" column="department_fax"/>
    <result  property="departmentParentId" jdbcType="VARCHAR" column="department_parent_id"/>   
    <result  property="companyId" jdbcType="VARCHAR" column="company_id"/> 
    <result  property="companyName" jdbcType="VARCHAR" column="company_name"/>    
    <result  property="CountNumber" jdbcType="VARCHAR" column="Count_number"/>
    <result  property="employeeName" jdbcType="VARCHAR" column="employee_name"/>
 </resultMap>
  
  <sql id="Base_Column_List"> 
    department_id,department_numbe, department_name, department_describe, department_principal
  </sql>
  
	
	<select id="findDepartmentTree"  resultMap="Department">
	SELECT DISTINCT d.department_id,d.department_name  
    FROM organization.department_ d 
	where		
		department_parent_id=#{departmentParentId,jdbcType=VARCHAR}
		AND	
		company_id=#{companyId}	
	</select>
  
   <select id="findByMoreDepartment"   parameterType="java.util.Map" resultMap="Department">  
   select d.department_id, d.department_numbe, d.department_name, d.department_describe,d.department_parent_id,d.company_id, 
   d.employee_id,(select c.company_name from organization.company_ c  where c.company_id=d.company_id),
   (select e.employee_name from organization.employee_ e where e.employee_id=d.employee_id)
    from organization.department_  d      
    <where> 
     <if test="companyName!=null and companyName != ''">
         and d.company_id in (select c.company_id from organization.company_ c where c.company_name like '%${companyName}%')
     </if>
     <if test="departmentName != null and departmentName != ''">
		 and d.department_name like '%${departmentName}%'
	 </if>
     <if test="employeeName != null and employeeName != ''">
	     and d.employee_id in(select d.employee_id from organization.department_  d  LEFT JOIN organization.employee_ e on e.employee_id=d.employee_id where employee_name like '%${employeeName}%')
	 </if> 				 
     </where>
     ORDER BY d.department_numbe ASC
  </select> 
    
  <!-- 查询所有部门 -->
  <select id="findByAllDepartment" parameterType="java.lang.String" resultMap="Department">
    select 
    d.department_id, d.department_numbe, d.department_name, d.department_describe,d.department_parent_id,d.company_id, d.employee_id,(select c.company_name from organization.company_ c  where c.company_id=d.company_id),(select e.employee_name from organization.employee_ e where e.employee_id=d.employee_id)
    from organization.department_  d  
    where	
	d.company_id=#{companyId}	 
  </select>
  <!-- 查询部门下的所有子部门 -->
  <select id="findSingleAllDepartment" parameterType="java.lang.String" resultMap="Department">
    select d.department_id, d.department_numbe, d.department_name, d.department_describe,d.department_parent_id,d.company_id, d.employee_id,(select c.company_name from organization.company_ c  where c.company_id=d.company_id),(select e.employee_name from organization.employee_ e where e.employee_id=d.employee_id)
    from organization.department_  d  
    where d.department_parent_id = #{departmentId,jdbcType=VARCHAR}
    AND	
	company_id=#{companyId}	
  </select>
  
  <!-- 查询单个部门 --> 
  <select id="selectByDepartment" parameterType="java.lang.String" resultMap="Department">
    select d.department_id, d.department_numbe, d.department_name, d.department_describe,d.department_parent_id,d.company_id, d.employee_id,(select c.company_name from organization.company_ c  where c.company_id=d.company_id),(select e.employee_name from organization.employee_ e where e.employee_id=d.employee_id)
    from organization.department_  d  
    where department_id = #{departmentId,jdbcType=VARCHAR}
    AND	
	company_id=#{companyId}	
  </select>
  
  <select id="findByDepartmentNumber" parameterType="java.lang.String" resultMap="Department">
    select d.department_id, d.department_numbe, d.department_name, d.department_describe,d.department_parent_id,d.company_id, d.employee_id,(select c.company_name from company_ c  where c.company_id=d.company_id),(select e.employee_name from employee_ e where e.employee_id=d.employee_id)
    from organization.department_  d  
    where department_numbe = #{departmentNumbe,jdbcType=VARCHAR}
    AND	
	company_id=#{companyId}	
  </select>
    
  <delete id="deleteByDepartment" parameterType="java.lang.String">
    delete from organization.department_
    where department_id = #{departmentId,jdbcType=VARCHAR}
  </delete>
  
  
  <insert id="insertDepartment" parameterType="com.xiangshangban.organization.bean.Department">   
    insert into organization.department_ (department_id, department_numbe, department_name,department_describe, 
      employee_id, department_phone, department_fax, 
      department_parent_id,company_id
      )
    values (
      #{departmentId,jdbcType=VARCHAR},
      #{departmentNumbe,jdbcType=VARCHAR},
      #{departmentName,jdbcType=VARCHAR}, 
      #{departmentDescribe,jdbcType=VARCHAR}, 
      #{employeeId,jdbcType=VARCHAR}, 
      #{departmentPhone,jdbcType=VARCHAR}, 
      #{departmentFax,jdbcType=VARCHAR}, 
      #{departmentParentId,jdbcType=VARCHAR},                
      #{companyId,jdbcType=VARCHAR}          
      )
  </insert>
 

  <update id="updateByDepartment" parameterType="com.xiangshangban.organization.bean.Department">  
    update organization.department_
    set        
      department_name = #{departmentName,jdbcType=VARCHAR},
      department_describe = #{departmentDescribe,jdbcType=VARCHAR},
      employee_id = #{employeeId,jdbcType=VARCHAR}             
    where 
    department_id = #{departmentId,jdbcType=VARCHAR}
  </update>
</mapper>