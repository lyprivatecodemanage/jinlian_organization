<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiangshangban.organization.dao.TransferjobDao">
	<resultMap id="Transferjob"
		type="com.xiangshangban.organization.bean.Transferjob">
		<result column="transfer_job_id" jdbcType="VARCHAR" property="transferJobId" />
		<result column="employee_id" jdbcType="VARCHAR" property="employeeId" />
		<result column="transfer_begin_time" jdbcType="VARCHAR" property="transferBeginTime" />
		<result column="department_id" jdbcType="VARCHAR" property="departmentId" />
		<result column="transfer_job_cause" jdbcType="VARCHAR" property="transferJobCause" />
		<result column="transfer_end_time" jdbcType="VARCHAR" property="transferEndTime" />
		<result column="transfer_type" jdbcType="VARCHAR" property="transferType" />
		<result column="user_id" jdbcType="VARCHAR" property="userId" />
		<result column="operating_time" jdbcType="VARCHAR" property="operatingTime" />
		<result column="company_id" jdbcType="VARCHAR" property="companyId" />
		<result column="direct_person_id" jdbcType="VARCHAR" property="directPersonId" />			    
	    <result column="employee_name" jdbcType="VARCHAR" property="employeeName" />
	    <result column="login_name" jdbcType="VARCHAR" property="loginName" />    
	    <result column="employee_sex" jdbcType="VARCHAR" property="employeeSex" />
	    <result column="employee_no" jdbcType="VARCHAR" property="employeeNo" />
	    <result column="direct_person_id" jdbcType="VARCHAR" property="directPersonId" />	     
	    <result column="employee_phone" jdbcType="VARCHAR" property="employeePhone" />
	    <result column="employee_twophone" jdbcType="VARCHAR" property="employeeTwophone" />
	    <result column="employee_status" jdbcType="VARCHAR" property="employeeStatus" />
	    <result column="probationary_expired" jdbcType="VARCHAR" property="probationaryExpired" />
	    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
	    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
	    <result column="post_name" jdbcType="VARCHAR" property="postName" />  
	    <result column="entry_time" jdbcType="VARCHAR" property="entryTime" />
        <result property="isDelete" column="is_delete" /> 
        <result property="postGrades" column="post_grades" /> 
        <result property="postId" column="post_id" /> 
        <result column="direct_person_name" jdbcType="VARCHAR" property="directPersonName" />
	</resultMap>

	<sql id="Base_Column_List">
		transfer_job_id, employe_id, transfer_begin_time, department_id, post_id,
		transfer_job_cause, transfer_end_time, transfer_type,
		transfer_job_person, operating_time
	</sql>
	
	<!-- 李业,页面功能:删除人员信息 -->
	<update id="updateTransferEndTimeWhereDeleteEmployee" parameterType="java.lang.String">
		update transfer_job_ 
		set transfer_end_time = #{transferEndTime}
		where company_id =#{companyId} and employee_id = #{employeeId} 
		and departmentId = {departmentId} and post_id = #{postId}
		and operating_time = (select max(operating_time) operating_time from transfer_job_
		where company_id =#{companyId} and employee_id = #{employeeId} 
		and department_id = {departmentId} and post_id = #{postId}
		)
	</update>
	
	<!-- 根据员工ID，在职时间查询员工信息 -->
	<select id="findByempinfo" parameterType="java.lang.String" resultMap="Transferjob">
		select DISTINCT
	   t.transfer_job_id,t.employee_id,e.employee_name,e.employee_no,t.department_id,(select d.department_name from department_ d where d.department_id=t.department_id),
       t.direct_person_id,y.employee_name AS directPersonName,t.transfer_job_cause,
       t.transfer_begin_time,t.transfer_end_time,t.user_id,t.operating_time,
       e.login_name, e.employee_sex, e.employee_phone,
       e.employee_twophone,e.entry_time,e.company_id,c.company_name,
       e.employee_status,e.probationary_expired,m.post_id,s.post_name,m.post_grades,m.is_delete,m.post_staus
       
	    from transfer_job_ t
	    LEFT JOIN  employee_ e on e.employee_id=t.employee_id
	    lEFT JOIN  employee_ y  on y.employee_id=t.direct_person_id
	    lEFT JOIN  department_ d  on d.department_id=t.department_id
		lEFT JOIN  company_ c on c.company_id=e.company_id
	    LEFT JOIN  connect_emp_post_ m on m.employee_id=t.employee_id and m.department_id=t.department_id and m.post_grades='1'
	    LEFT JOIN  post_ s on s.post_id=m.post_id
		<where>
			<if test="companyId!=null and companyId != ''">
				and t.company_id=#{companyId}
			</if>
			<if test="employeeId!=null and employeeId != ''">
				and t.employee_id=#{employeeId}
			</if>
			<if test="positionTime!=null and positionTime != ''">
				and #{positionTime} between t.transfer_begin_time and t.transfer_end_time
			</if>

		</where>

	</select>

	<!-- 根据员工ID,当结束时间为null查询员工信息 -->
	<select id="findByempNullinfo" parameterType="java.lang.String" resultMap="Transferjob">
	   select DISTINCT
	   t.transfer_job_id,t.employee_id,e.employee_name,e.employee_no,t.department_id,(select d.department_name from department_ d where d.department_id=t.department_id),
       t.direct_person_id,y.employee_name AS directPersonName,t.transfer_job_cause,
       t.transfer_begin_time,t.transfer_end_time,t.user_id,t.operating_time,
       e.login_name, e.employee_sex, e.employee_phone,
       e.employee_twophone,e.entry_time,e.company_id,c.company_name,
       e.employee_status,e.probationary_expired,m.post_id,s.post_name,m.post_grades,m.is_delete,m.post_staus
       
	    from transfer_job_ t
	    LEFT JOIN  employee_ e on e.employee_id=t.employee_id
	    lEFT JOIN  employee_ y  on y.employee_id=t.direct_person_id
	    lEFT JOIN  department_ d  on d.department_id=t.department_id
		lEFT JOIN  company_ c on c.company_id=e.company_id
	    LEFT JOIN  connect_emp_post_ m on m.employee_id=t.employee_id and m.department_id=t.department_id and m.post_grades='1'
	    LEFT JOIN  post_ s on s.post_id=m.post_id

		<where>
			<if test="companyId!=null and companyId != ''">
				and t.company_id=#{companyId}
			</if>
			<if test="employeeId!=null and employeeId != ''">
				and t.employee_id =#{employeeId}
			</if>
			   and t.transfer_end_time is null
		</where>
	</select>


	<select id="findByTransferjobInfo" parameterType="java.lang.String" resultMap="Transferjob">
		select
		t.transfer_job_id, t.transfer_begin_time,t.transfer_job_cause, t.transfer_end_time,
		t.transfer_job_person, t.operating_time,e.employee_name,
		e.login_name,e.employee_sex,e.employee_no, e.direct_report_person,
		e.employee_phone,e.employee_twophone,e.entry_time,
		(select d.department_name from organization.department_ d where
		d.department_id=(select t.department_id from
		organization.transfer_job_ t LEFT JOIN organization.employee_ e on
		t.employee_id=e.employee_id)),
		e.employee_status,e.probationary_expired ,c.post_id
		from organization.transfer_job_ t
		LEFT JOIN organization.employee_ e on e.employee_id=t.employee_id
		LEFT JOIN organization.connect_emp_post_ c on t.transfer_job_id =
		c.transfer_job_id
		where
		employee_status='0'
		and t.employee_id=#{employeeId}
		and t.company_id=#{companyId}
	</select>


	<select id="selectByTransferjob" parameterType="java.lang.String"
		resultMap="Transferjob">
		select
		<include refid="Base_Column_List" />
		from organization.transfer_job_
		where transfer_job_id = #{transferJobId}
	</select>

	<select id="selectByTransferjobpost" parameterType="java.lang.String"
		resultMap="Transferjob">
		select
		t.transfer_job_id,t.department_id
		from organization.transfer_job_ t
		where
		t.transfer_end_time is null
		and employee_id = #{employeeId}
		and t.company_id=#{companyId}
	</select>


	<delete id="deleteByTransferjob" parameterType="java.lang.String">
		delete from organization.transfer_job_
		where
		transfer_job_id = #{transferJobId}
	</delete>

	<insert id="insertTransferjob" parameterType="com.xiangshangban.organization.bean.Transferjob">
		insert into organization.transfer_job_ (transfer_job_id, employee_id,
		transfer_begin_time,
		department_id,transfer_job_cause, transfer_end_time,
		operating_time,user_id,company_id,direct_person_id,post_id
		)
		values (
		#{transferJobId}, #{employeeId},
		#{transferBeginTime},
		#{departmentId},#{transferJobCause},
		#{transferEndTime},
		${to_char(now(),'yyyy-MM-dd hh24:mi:ss')},
		#{userId},
		#{companyId},#{directPersonId},
		#{postId}
		)
	</insert>


	<update id="updateByTransferjob" parameterType="com.xiangshangban.organization.bean.Transferjob">
		update organization.transfer_job_
		set
		employee_id = #{employeeId},
		transfer_begin_time = #{transferBeginTime},
		department_id = #{departmentId},
		transfer_job_cause = #{transferJobCause},
		transfer_end_time = #{transferEndTime},
		operating_time = #{operatingTime},
		direct_person_id = #{directPersonId}, 
		post_id = #{postId}
		where
		transfer_job_id = #{transferJobId}
	</update>

	<update id="updateByTrandepartmentId" parameterType="com.xiangshangban.organization.bean.Transferjob">
		update organization.transfer_job_
		set
		department_id = #{departmentId}
		where
		employee_id = #{employeeId}
		AND
		transfer_end_time is null
	</update>


	<update id="updateBytransferendtime" parameterType="com.xiangshangban.organization.bean.Transferjob">
		update organization.transfer_job_
		set
		transfer_end_time = #{transferEndTime}
		where
		employee_id = #{employeeId}
		AND
		transfer_end_time is null
	</update>

</mapper>