<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiangshangban.organization.dao.TransferjobDao">
  <resultMap id="Transferjob" type="com.xiangshangban.organization.bean.Transferjob">   
    <result column="transfer_job_id" jdbcType="VARCHAR" property="transferJobId" />
    <result column="employee_id" jdbcType="VARCHAR" property="employeeId" />
    <result column="transfer_begin_time" jdbcType="VARCHAR" property="transferBeginTime" />
    <result column="department_id" jdbcType="VARCHAR" property="departmentId" />    
    <result column="transfer_job_cause" jdbcType="VARCHAR" property="transferJobCause" />
    <result column="transfer_end_time" jdbcType="VARCHAR" property="transferEndTime" />
    <result column="transfer_type" jdbcType="VARCHAR" property="transferType" />   
    <result column="user_id" jdbcType="VARCHAR" property="userId" />    
    <result column="operating_time" jdbcType="VARCHAR" property="operatingTime" />
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />
    <result column="direct_person_id" jdbcType="VARCHAR" property="directPersonId" />
    
  </resultMap>
  
  <sql id="Base_Column_List"> 
    transfer_job_id, employe_id, transfer_begin_time, department_id, post_id, 
    transfer_job_cause, transfer_end_time, transfer_type, transfer_job_person, operating_time
  </sql>
  
  <select id="findByTransferjobInfo" parameterType="java.lang.String" resultMap="Transferjob">  
    select 
    t.transfer_job_id, t.transfer_begin_time,t.transfer_job_cause, t.transfer_end_time, t.transfer_job_person, t.operating_time,e.employee_name,
    e.login_name,e.employee_sex,e.employee_no, e.direct_report_person, e.employee_phone,e.employee_twophone,e.entry_time,
       (select d.department_name from organization.department_ d where d.department_id=(select t.department_id from organization.transfer_job_ t LEFT JOIN organization.employee_ e on t.employee_id=e.employee_id)),
       e.employee_status,e.probationary_expired ,c.post_id
    from organization.transfer_job_ t  
    LEFT JOIN organization.employee_ e on e.employee_id=t.employee_id
    LEFT JOIN organization.connect_emp_post_ c on t.transfer_job_id = c.transfer_job_id
    where 
    employee_status='0'  
    and  t.employee_id=#{employeeId} 
    and t.company_id=#{companyId}
  </select>
  
  
  <select id="selectByTransferjob" parameterType="java.lang.String" resultMap="Transferjob">  
    select 
    <include refid="Base_Column_List" />
    from organization.transfer_job_
    where transfer_job_id = #{transferJobId,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByTransferjobpost" parameterType="java.lang.String" resultMap="Transferjob">  
    select 
     t.transfer_job_id,t.department_id
    from organization.transfer_job_ t
    where  
    t.transfer_end_time is null   
    and employee_id = #{employeeId,jdbcType=VARCHAR} 
    and t.company_id=#{companyId}
  </select>
  
  
  <delete id="deleteByTransferjob" parameterType="java.lang.String"> 
    delete from organization.transfer_job_
    where 
    transfer_job_id = #{transferJobId,jdbcType=VARCHAR}
  </delete>
  
  <insert id="insertTransferjob" parameterType="com.xiangshangban.organization.bean.Transferjob">    
    insert into organization.transfer_job_ (transfer_job_id, employee_id, transfer_begin_time, 
      department_id,transfer_job_cause, transfer_end_time,
       operating_time,user_id,company_id,direct_person_id
      )
    values (
      #{transferJobId,jdbcType=VARCHAR}, #{employeeId,jdbcType=VARCHAR}, #{transferBeginTime,jdbcType=VARCHAR}, 
      #{departmentId,jdbcType=VARCHAR},#{transferJobCause,jdbcType=VARCHAR}, #{transferEndTime,jdbcType=VARCHAR},
      #{operatingTime,jdbcType=VARCHAR},#{userId,jdbcType=VARCHAR},
      #{companyId,jdbcType=VARCHAR},#{directPersonId,jdbcType=VARCHAR}
      )
  </insert>
  
  
  <update id="updateByTransferjob" parameterType="com.xiangshangban.organization.bean.Transferjob">    
    update organization.transfer_job_
    set 
      employee_id = #{employeeId,jdbcType=VARCHAR},
      transfer_begin_time = #{transferBeginTime,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=VARCHAR},     
      transfer_job_cause = #{transferJobCause,jdbcType=VARCHAR},
      transfer_end_time = #{transferEndTime,jdbcType=VARCHAR},                 
      operating_time = #{operatingTime,jdbcType=VARCHAR},
      direct_person_id = #{directPersonId,jdbcType=VARCHAR}
      
    where 
    transfer_job_id = #{transferJobId,jdbcType=VARCHAR}
  </update>
  
  <update id="updateByTrandepartmentId" parameterType="com.xiangshangban.organization.bean.Transferjob">    
    update organization.transfer_job_
    set 
      department_id = #{departmentId,jdbcType=VARCHAR}          
    where 
    employee_id = #{employeeId,jdbcType=VARCHAR}
    AND
    transfer_end_time is null
  </update>
  
  
  <update id="updateBytransferendtime" parameterType="com.xiangshangban.organization.bean.Transferjob">    
    update organization.transfer_job_
    set 
      transfer_end_time = #{transferEndTime,jdbcType=VARCHAR}          
    where 
    employee_id = #{employeeId,jdbcType=VARCHAR}
    AND
    transfer_end_time is null
  </update>
  
</mapper>